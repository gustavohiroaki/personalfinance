name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tagCreated: ${{ steps.create_tag.outputs.tagCreated }}
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Extract version from main.go
        id: extract_version
        run: |
          # Extraindo a versão a partir da constante definida em main.go
          VERSION=$(grep -oP 'const Version\s*=\s*"\K[^"]+' main.go)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Tag if not exists
        id: create_tag
        uses: actions/github-script@v6
        with:
          script: |
            const version = process.env.VERSION;
            const tagName = `v${version}`;
            try {
              // Tenta buscar a referência da tag
              await github.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tagName}`
              });
              console.log(`Tag ${tagName} already exists.`);
              return { tagCreated: "false" };
            } catch (error) {
              console.log(`Tag ${tagName} does not exist, creating...`);
              const commitSha = context.sha;
              // Cria o objeto de tag anotada
              await github.git.createTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tagName,
                message: `Release ${tagName}`,
                object: commitSha,
                type: 'commit'
              });
              // Cria a referência da tag
              await github.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tagName}`,
                sha: commitSha
              });
              console.log(`Tag ${tagName} created.`);
              return { tagCreated: "true" };
            }
        env:
          VERSION: ${{ env.VERSION }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.tagCreated == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/personalfinance:v${{ needs.build.outputs.version }}
